@model manga_reader_web.Models.MangaListViewModel
@{
    ViewData["Title"] = "Manga phổ biến";
}

<div class="container py-4">
    <div class="popular-header mb-5">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-3"><i class="bi bi-star-fill text-warning me-2"></i>Manga phổ biến</h1>
                <p class="lead text-muted">Khám phá những manga được yêu thích nhất với hàng triệu lượt đọc trên toàn thế giới.</p>
            </div>
            <div class="col-md-4 text-md-end">
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="timeframeDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-calendar-range me-1"></i> Khung thời gian
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="timeframeDropdown">
                        <li>
                            <a class="dropdown-item @(Model.SortOptions.TimeFrame == "all" || string.IsNullOrEmpty(Model.SortOptions.TimeFrame) ? "active" : "")" 
                               asp-action="Popular" asp-route-timeFrame="all">
                                <i class="bi bi-infinity me-2"></i>Tất cả thời gian
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item @(Model.SortOptions.TimeFrame == "month" ? "active" : "")" 
                               asp-action="Popular" asp-route-timeFrame="month">
                                <i class="bi bi-calendar-month me-2"></i>Tháng này
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item @(Model.SortOptions.TimeFrame == "week" ? "active" : "")" 
                               asp-action="Popular" asp-route-timeFrame="week">
                                <i class="bi bi-calendar-week me-2"></i>Tuần này
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewBag.ErrorMessage
        </div>
    }
    
    @if (Model.Mangas.Count == 0)
    {
        <div class="text-center py-5">
            <i class="bi bi-emoji-frown display-1 text-muted"></i>
            <h3 class="mt-3">Không tìm thấy manga</h3>
            <p class="text-muted">Không có dữ liệu manga phổ biến. Vui lòng thử lại sau.</p>
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary mt-2">
                <i class="bi bi-house-door me-2"></i>Quay lại trang chủ
            </a>
        </div>
    }
    else
    {
        <div class="row">
            @for (int i = 0; i < Model.Mangas.Count; i++)
            {
                var manga = Model.Mangas[i];
                
                @if (i < 3)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 manga-card top-manga">
                            <div class="position-absolute top-0 start-0 p-2">
                                <div class="badge bg-primary rank-badge">
                                    <span class="rank-number">@(i + 1)</span>
                                </div>
                            </div>
                            <a asp-action="Details" asp-route-id="@manga.Id" class="manga-cover-link">
                                <img src="@manga.CoverUrl" class="card-img-top manga-cover" alt="@manga.Title" loading="lazy">
                                @if (!string.IsNullOrEmpty(manga.Status))
                                {
                                    <span class="manga-status badge @(manga.Status == "ongoing" ? "bg-success" : "bg-secondary")">
                                        @TranslateStatus(manga.Status)
                                    </span>
                                }
                            </a>
                            <div class="card-body">
                                <h5 class="card-title manga-title">
                                    <a asp-action="Details" asp-route-id="@manga.Id" class="text-decoration-none text-dark">
                                        @manga.Title
                                    </a>
                                </h5>
                                @if (!string.IsNullOrEmpty(manga.Author))
                                {
                                    <p class="card-text small text-muted">
                                        <i class="bi bi-person"></i> @manga.Author
                                    </p>
                                }
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div class="manga-rating">
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <span>@(manga.Rating > 0 ? manga.Rating.ToString("0.0") : "N/A")</span>
                                    </div>
                                    <div class="manga-views">
                                        <i class="bi bi-eye"></i>
                                        <span>@FormatNumber(manga.Views)</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-6 col-md-3 mb-4">
                        <div class="card h-100 manga-card">
                            <div class="position-absolute top-0 start-0 p-2">
                                <div class="badge bg-secondary rank-badge-small">
                                    <span class="rank-number-small">@(i + 1)</span>
                                </div>
                            </div>
                            <a asp-action="Details" asp-route-id="@manga.Id" class="manga-cover-link">
                                <img src="@manga.CoverUrl" class="card-img-top manga-cover" alt="@manga.Title" loading="lazy">
                                @if (!string.IsNullOrEmpty(manga.Status))
                                {
                                    <span class="manga-status badge @(manga.Status == "ongoing" ? "bg-success" : "bg-secondary")">
                                        @TranslateStatus(manga.Status)
                                    </span>
                                }
                            </a>
                            <div class="card-body">
                                <h5 class="card-title manga-title">
                                    <a asp-action="Details" asp-route-id="@manga.Id" class="text-decoration-none text-dark">
                                        @manga.Title
                                    </a>
                                </h5>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div class="manga-rating">
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <span>@(manga.Rating > 0 ? manga.Rating.ToString("0.0") : "N/A")</span>
                                    </div>
                                    <div class="manga-views">
                                        <i class="bi bi-eye"></i>
                                        <span>@FormatNumber(manga.Views)</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        
        @if (Math.Ceiling((double)Model.TotalCount / Model.PageSize) > 1)
        {
            <div class="d-flex justify-content-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Popular" asp-route-page="1" 
                                   asp-route-timeFrame="@Model.SortOptions.TimeFrame" aria-label="First">
                                    <i class="bi bi-chevron-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Popular" asp-route-page="@(Model.CurrentPage - 1)" 
                                   asp-route-timeFrame="@Model.SortOptions.TimeFrame" aria-label="Previous">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                        }
                        
                        @{
                            var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(startPage + 4, totalPages);
                            
                            if (endPage - startPage < 4 && startPage > 1)
                            {
                                startPage = Math.Max(1, endPage - 4);
                            }
                        }
                        
                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Popular" asp-route-page="@i" 
                                   asp-route-timeFrame="@Model.SortOptions.TimeFrame">@i</a>
                            </li>
                        }
                        
                        @if (Model.CurrentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Popular" asp-route-page="@(Model.CurrentPage + 1)" 
                                   asp-route-timeFrame="@Model.SortOptions.TimeFrame" aria-label="Next">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Popular" asp-route-page="@totalPages" 
                                   asp-route-timeFrame="@Model.SortOptions.TimeFrame" aria-label="Last">
                                    <i class="bi bi-chevron-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            
            <div class="text-center mt-2 text-muted">
                <small>Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) trong tổng số @Model.TotalCount manga</small>
            </div>
        }
    }
</div>

@section Styles {
    <style>
        /* Popular header */
        .popular-header {
            border-bottom: 1px solid #eee;
            padding-bottom: 1.5rem;
        }
        
        /* Manga Cards */
        .manga-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 0.5rem;
            overflow: hidden;
        }
        
        .manga-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .top-manga {
            border: 2px solid #ffc107;
        }
        
        .manga-cover-link {
            position: relative;
            display: block;
            height: 250px;
            overflow: hidden;
        }
        
        .manga-cover {
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
        
        .manga-cover-link:hover .manga-cover {
            transform: scale(1.05);
        }
        
        .manga-status {
            position: absolute;
            bottom: 10px;
            left: 10px;
            font-size: 0.75rem;
        }
        
        .manga-title {
            font-size: 1rem;
            height: 40px;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            margin-bottom: 0.5rem;
        }
        
        .manga-rating, .manga-views {
            font-size: 0.875rem;
        }
        
        /* Rank badges */
        .rank-badge {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-weight: bold;
            font-size: 1.25rem;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .rank-badge-small {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-weight: bold;
            font-size: 0.875rem;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        /* Pagination */
        .pagination .page-link {
            border-radius: 0.25rem;
            margin: 0 2px;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        
        /* Dropdown */
        .dropdown-item.active {
            background-color: #0d6efd;
            color: white;
        }
    </style>
}

@functions {
    public string TranslateStatus(string status)
    {
        return status switch
        {
            "ongoing" => "Đang tiến hành",
            "completed" => "Hoàn thành",
            "hiatus" => "Tạm ngưng",
            "cancelled" => "Đã hủy",
            _ => "Không rõ"
        };
    }
    
    public string FormatNumber(int number)
    {
        if (number >= 1000000)
        {
            return (number / 1000000.0).ToString("0.#") + "M";
        }
        else if (number >= 1000)
        {
            return (number / 1000.0).ToString("0.#") + "K";
        }
        
        return number.ToString("#,0");
    }
} 