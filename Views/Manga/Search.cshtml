@model manga_reader_web.Models.MangaListViewModel
@{
    ViewData["Title"] = "Tìm kiếm manga";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="mb-4"><i class="bi bi-search me-2"></i>Tìm kiếm manga</h1>
            
            <div class="card search-card">
                <div class="card-body">
                    <form asp-action="Search" method="get" id="searchForm">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <div class="input-group mb-3">
                                    <span class="input-group-text bg-primary text-white"><i class="bi bi-search"></i></span>
                                    <input type="text" name="title" value="@Model.SortOptions.Title" class="form-control form-control-lg" placeholder="Nhập tên manga cần tìm...">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-search me-2"></i>Tìm kiếm
                                    </button>
                                </div>
                            </div>
                            
                            <div class="col-md-12">
                                <div class="accordion" id="searchFilters">
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="headingFilters">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters">
                                                <i class="bi bi-funnel me-2"></i>Bộ lọc nâng cao
                                            </button>
                                        </h2>
                                        <div id="collapseFilters" class="accordion-collapse collapse" aria-labelledby="headingFilters" data-bs-parent="#searchFilters">
                                            <div class="accordion-body">
                                                <div class="row g-3">
                                                    <div class="col-md-6">
                                                        <label class="form-label">Trạng thái</label>
                                                        <div class="d-flex flex-wrap gap-2">
                                                            <div class="form-check form-check-inline">
                                                                <input class="form-check-input" type="radio" name="status" id="statusAll" value="" checked>
                                                                <label class="form-check-label" for="statusAll">Tất cả</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                <input class="form-check-input" type="radio" name="status" id="statusOngoing" value="ongoing" @(Model.SortOptions.Status == "ongoing" ? "checked" : "")>
                                                                <label class="form-check-label" for="statusOngoing">Đang tiến hành</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                <input class="form-check-input" type="radio" name="status" id="statusCompleted" value="completed" @(Model.SortOptions.Status == "completed" ? "checked" : "")>
                                                                <label class="form-check-label" for="statusCompleted">Hoàn thành</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="col-md-6">
                                                        <label class="form-label">Sắp xếp theo</label>
                                                        <select class="form-select" name="sortBy">
                                                            <option value="latest" selected="@(Model.SortOptions.SortBy == "latest")">Mới nhất</option>
                                                            <option value="title" selected="@(Model.SortOptions.SortBy == "title")">Tên (A-Z)</option>
                                                            <option value="popular" selected="@(Model.SortOptions.SortBy == "popular")">Phổ biến</option>
                                                        </select>
                                                    </div>
                                                    
                                                    <div class="col-md-12">
                                                        <label class="form-label">Thể loại</label>
                                                        <div class="d-flex flex-wrap gap-2">
                                                            @{
                                                                var genres = new[] { "Action", "Adventure", "Comedy", "Drama", "Fantasy", "Horror", "Romance", "Sci-Fi", "Slice of Life", "Sports", "Supernatural", "Mystery", "Psychological" };
                                                                foreach (var genre in genres)
                                                                {
                                                                    <div class="form-check form-check-inline">
                                                                        <input class="form-check-input" type="checkbox" name="genres" id="genre@(genre)" value="@genre" @(Model.SortOptions.Genres != null && Model.SortOptions.Genres.Contains(genre) ? "checked" : "")>
                                                                        <label class="form-check-label" for="genre@(genre)">@genre</label>
                                                                    </div>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="col-md-12 text-end">
                                                        <button type="button" class="btn btn-outline-secondary me-2" id="resetFilters">
                                                            <i class="bi bi-x-circle me-2"></i>Xóa bộ lọc
                                                        </button>
                                                        <button type="submit" class="btn btn-primary">
                                                            <i class="bi bi-filter me-2"></i>Áp dụng bộ lọc
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <input type="hidden" name="page" value="1" />
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewBag.ErrorMessage
        </div>
    }
    
    @if (!string.IsNullOrEmpty(Model.SortOptions.Title) || !string.IsNullOrEmpty(Model.SortOptions.Status) || (Model.SortOptions.Genres != null && Model.SortOptions.Genres.Any()))
    {
        <div class="d-flex align-items-center mb-4">
            <h5 class="mb-0 me-3">Kết quả tìm kiếm:</h5>
            <div class="d-flex flex-wrap gap-2">
                @if (!string.IsNullOrEmpty(Model.SortOptions.Title))
                {
                    <span class="badge bg-primary">Tên: @Model.SortOptions.Title</span>
                }
                @if (!string.IsNullOrEmpty(Model.SortOptions.Status))
                {
                    <span class="badge bg-info">Trạng thái: @TranslateStatus(Model.SortOptions.Status)</span>
                }
                @if (Model.SortOptions.Genres != null)
                {
                    foreach (var genre in Model.SortOptions.Genres)
                    {
                        <span class="badge bg-secondary">@genre</span>
                    }
                }
            </div>
        </div>
    }
    
    @if (Model.Mangas.Count == 0)
    {
        <div class="text-center py-5">
            <i class="bi bi-emoji-frown display-1 text-muted"></i>
            <h3 class="mt-3">Không tìm thấy manga</h3>
            <p class="text-muted">Không tìm thấy manga phù hợp với tiêu chí tìm kiếm của bạn.</p>
            <a asp-action="Search" class="btn btn-primary mt-2">
                <i class="bi bi-arrow-counterclockwise me-2"></i>Xóa bộ lọc
            </a>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var manga in Model.Mangas)
            {
                <div class="col-6 col-md-4 col-lg-3 mb-4">
                    <div class="card h-100 manga-card">
                        <a asp-action="Details" asp-route-id="@manga.Id" class="manga-cover-link">
                            <img src="@manga.CoverUrl" class="card-img-top manga-cover" alt="@manga.Title" loading="lazy">
                            @if (!string.IsNullOrEmpty(manga.Status))
                            {
                                <span class="manga-status badge @(manga.Status == "ongoing" ? "bg-success" : "bg-secondary")">
                                    @TranslateStatus(manga.Status)
                                </span>
                            }
                        </a>
                        <div class="card-body">
                            <h5 class="card-title manga-title">
                                <a asp-action="Details" asp-route-id="@manga.Id" class="text-decoration-none text-dark">
                                    @manga.Title
                                </a>
                            </h5>
                            @if (!string.IsNullOrEmpty(manga.Author))
                            {
                                <p class="card-text small text-muted">
                                    <i class="bi bi-person"></i> @manga.Author
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        
        @if (Math.Ceiling((double)Model.TotalCount / Model.PageSize) > 1)
        {
            <div class="d-flex justify-content-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Search" asp-route-page="1" 
                                   asp-route-title="@Model.SortOptions.Title" 
                                   asp-route-status="@Model.SortOptions.Status"
                                   asp-route-sortBy="@Model.SortOptions.SortBy"
                                   asp-all-route-data="@(Model.SortOptions.Genres?.Select(g => new KeyValuePair<string, string>("genres", g)).ToDictionary(x => x.Key, x => x.Value))" 
                                   aria-label="First">
                                    <i class="bi bi-chevron-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Search" asp-route-page="@(Model.CurrentPage - 1)" 
                                   asp-route-title="@Model.SortOptions.Title" 
                                   asp-route-status="@Model.SortOptions.Status"
                                   asp-route-sortBy="@Model.SortOptions.SortBy"
                                   asp-all-route-data="@(Model.SortOptions.Genres?.Select(g => new KeyValuePair<string, string>("genres", g)).ToDictionary(x => x.Key, x => x.Value))" 
                                   aria-label="Previous">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                        }
                        
                        @{
                            var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(startPage + 4, totalPages);
                            
                            if (endPage - startPage < 4 && startPage > 1)
                            {
                                startPage = Math.Max(1, endPage - 4);
                            }
                        }
                        
                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Search" asp-route-page="@i" 
                                   asp-route-title="@Model.SortOptions.Title" 
                                   asp-route-status="@Model.SortOptions.Status"
                                   asp-route-sortBy="@Model.SortOptions.SortBy"
                                   asp-all-route-data="@(Model.SortOptions.Genres?.Select(g => new KeyValuePair<string, string>("genres", g)).ToDictionary(x => x.Key, x => x.Value))">
                                    @i
                                </a>
                            </li>
                        }
                        
                        @if (Model.CurrentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Search" asp-route-page="@(Model.CurrentPage + 1)" 
                                   asp-route-title="@Model.SortOptions.Title" 
                                   asp-route-status="@Model.SortOptions.Status"
                                   asp-route-sortBy="@Model.SortOptions.SortBy"
                                   asp-all-route-data="@(Model.SortOptions.Genres?.Select(g => new KeyValuePair<string, string>("genres", g)).ToDictionary(x => x.Key, x => x.Value))" 
                                   aria-label="Next">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Search" asp-route-page="@totalPages" 
                                   asp-route-title="@Model.SortOptions.Title" 
                                   asp-route-status="@Model.SortOptions.Status"
                                   asp-route-sortBy="@Model.SortOptions.SortBy"
                                   asp-all-route-data="@(Model.SortOptions.Genres?.Select(g => new KeyValuePair<string, string>("genres", g)).ToDictionary(x => x.Key, x => x.Value))" 
                                   aria-label="Last">
                                    <i class="bi bi-chevron-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            
            <div class="text-center mt-2 text-muted">
                <small>Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) trong tổng số @Model.TotalCount manga</small>
            </div>
        }
    }
</div>

@section Styles {
    <style>
        /* Search card */
        .search-card {
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: none;
            margin-bottom: 2rem;
        }
        
        /* Manga Cards */
        .manga-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 0.5rem;
            overflow: hidden;
        }
        
        .manga-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .manga-cover-link {
            position: relative;
            display: block;
            height: 250px;
            overflow: hidden;
        }
        
        .manga-cover {
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
        
        .manga-cover-link:hover .manga-cover {
            transform: scale(1.05);
        }
        
        .manga-status {
            position: absolute;
            bottom: 10px;
            left: 10px;
            font-size: 0.75rem;
        }
        
        .manga-title {
            font-size: 1rem;
            height: 40px;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            margin-bottom: 0.5rem;
        }
        
        /* Pagination */
        .pagination .page-link {
            border-radius: 0.25rem;
            margin: 0 2px;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        
        /* Form elements */
        .form-check-inline {
            margin-right: 0.75rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Xử lý nút reset bộ lọc
            $('#resetFilters').click(function() {
                $('input[name="status"]').prop('checked', false);
                $('#statusAll').prop('checked', true);
                
                $('input[name="genres"]').prop('checked', false);
                
                $('select[name="sortBy"]').val('latest');
                
                // Submit form
                $('#searchForm').submit();
            });
        });
    </script>
}

@functions {
    public string TranslateStatus(string status)
    {
        return status switch
        {
            "ongoing" => "Đang tiến hành",
            "completed" => "Hoàn thành",
            "hiatus" => "Tạm ngưng",
            "cancelled" => "Đã hủy",
            _ => "Không rõ"
        };
    }
} 