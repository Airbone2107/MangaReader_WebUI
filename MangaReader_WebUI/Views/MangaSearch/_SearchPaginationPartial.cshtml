@model MangaReader.WebUI.Models.ViewModels.Manga.MangaListViewModel

@if (Model.MaxPages > 1)
{
    <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @{
                    var totalPages = Model.MaxPages;
                    var startPage = Math.Max(2, Model.CurrentPage - 2);
                    var endPage = Math.Min(totalPages - 1, Model.CurrentPage + 2);
                }
                
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" 
                       hx-get="@Url.Action("Search", "Manga", new { 
                           page = Math.Max(1, Model.CurrentPage - 1), 
                           title = Model.SortOptions.Title, 
                           status = Model.SortOptions.Status, 
                           publicationDemographic = Model.SortOptions.PublicationDemographic,
                           contentRating = Model.SortOptions.ContentRating,
                           sortBy = Model.SortOptions.SortBy, 
                           authors = string.Join(",", Model.SortOptions.AuthorIds ?? new List<string>()),
                           year = Model.SortOptions.Year,
                           includedTagsMode = Model.SortOptions.IncludedTagsMode,
                           excludedTagsMode = Model.SortOptions.ExcludedTagsMode,
                           pageSize = Model.PageSize,
                           includedTagsStr = Model.SortOptions.IncludedTagsStr,
                           excludedTagsStr = Model.SortOptions.ExcludedTagsStr
                       })" 
                       hx-target="#search-results-and-pagination" 
                       hx-push-url="true" 
                       aria-label="Previous">
                        <i class="bi bi-chevron-left"></i>
                    </a>
                </li>
                
                <li class="page-item @(Model.CurrentPage == 1 ? "active" : "")">
                    <a class="page-link" 
                       hx-get="@Url.Action("Search", "Manga", new { 
                           page = 1, 
                           title = Model.SortOptions.Title, 
                           status = Model.SortOptions.Status, 
                           publicationDemographic = Model.SortOptions.PublicationDemographic,
                           contentRating = Model.SortOptions.ContentRating,
                           sortBy = Model.SortOptions.SortBy, 
                           authors = string.Join(",", Model.SortOptions.AuthorIds ?? new List<string>()),
                           year = Model.SortOptions.Year,
                           includedTagsMode = Model.SortOptions.IncludedTagsMode,
                           excludedTagsMode = Model.SortOptions.ExcludedTagsMode,
                           pageSize = Model.PageSize,
                           includedTagsStr = Model.SortOptions.IncludedTagsStr,
                           excludedTagsStr = Model.SortOptions.ExcludedTagsStr
                       })" 
                       hx-target="#search-results-and-pagination" 
                       hx-push-url="true">
                        1
                    </a>
                </li>
                
                @if (startPage > 2)
                {
                    <li class="page-item">
                        <span class="page-link dots" data-page-goto="left">...</span>
                    </li>
                }
                
                @for (var i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" 
                           hx-get="@Url.Action("Search", "Manga", new { 
                               page = i, 
                               title = Model.SortOptions.Title, 
                               status = Model.SortOptions.Status, 
                               publicationDemographic = Model.SortOptions.PublicationDemographic,
                               contentRating = Model.SortOptions.ContentRating,
                               sortBy = Model.SortOptions.SortBy, 
                               authors = string.Join(",", Model.SortOptions.AuthorIds ?? new List<string>()),
                               year = Model.SortOptions.Year,
                               includedTagsMode = Model.SortOptions.IncludedTagsMode,
                               excludedTagsMode = Model.SortOptions.ExcludedTagsMode,
                               pageSize = Model.PageSize,
                               includedTagsStr = Model.SortOptions.IncludedTagsStr,
                               excludedTagsStr = Model.SortOptions.ExcludedTagsStr
                           })" 
                           hx-target="#search-results-and-pagination" 
                           hx-push-url="true">
                            @i
                        </a>
                    </li>
                }
                
                @if (endPage < totalPages - 1)
                {
                    <li class="page-item">
                        <span class="page-link dots" data-page-goto="right">...</span>
                    </li>
                }
                
                @if (totalPages > 1)
                {
                    <li class="page-item @(Model.CurrentPage == totalPages ? "active" : "")">
                        <a class="page-link" 
                           hx-get="@Url.Action("Search", "Manga", new { 
                               page = totalPages, 
                               title = Model.SortOptions.Title, 
                               status = Model.SortOptions.Status, 
                               publicationDemographic = Model.SortOptions.PublicationDemographic,
                               contentRating = Model.SortOptions.ContentRating,
                               sortBy = Model.SortOptions.SortBy, 
                               authors = string.Join(",", Model.SortOptions.AuthorIds ?? new List<string>()),
                               year = Model.SortOptions.Year,
                               includedTagsMode = Model.SortOptions.IncludedTagsMode,
                               excludedTagsMode = Model.SortOptions.ExcludedTagsMode,
                               pageSize = Model.PageSize,
                               includedTagsStr = Model.SortOptions.IncludedTagsStr,
                               excludedTagsStr = Model.SortOptions.ExcludedTagsStr
                           })" 
                           hx-target="#search-results-and-pagination" 
                           hx-push-url="true">
                            @totalPages
                        </a>
                    </li>
                }
                
                <li class="page-item @(Model.CurrentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" 
                       hx-get="@Url.Action("Search", "Manga", new { 
                           page = Math.Min(totalPages, Model.CurrentPage + 1), 
                           title = Model.SortOptions.Title, 
                           status = Model.SortOptions.Status, 
                           publicationDemographic = Model.SortOptions.PublicationDemographic,
                           contentRating = Model.SortOptions.ContentRating,
                           sortBy = Model.SortOptions.SortBy, 
                           authors = string.Join(",", Model.SortOptions.AuthorIds ?? new List<string>()),
                           year = Model.SortOptions.Year,
                           includedTagsMode = Model.SortOptions.IncludedTagsMode,
                           excludedTagsMode = Model.SortOptions.ExcludedTagsMode,
                           pageSize = Model.PageSize,
                           includedTagsStr = Model.SortOptions.IncludedTagsStr,
                           excludedTagsStr = Model.SortOptions.ExcludedTagsStr
                       })" 
                       hx-target="#search-results-and-pagination" 
                       hx-push-url="true" 
                       aria-label="Next">
                        <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    
    <div class="text-center mt-2 text-muted">
        <small>Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) trong tổng số @Model.TotalCount manga</small>
        @if (Model.TotalCount > 10000)
        {
            <br><small class="text-warning">API giới hạn chỉ hiển thị tối đa 10000 kết quả, tương ứng với trang @Model.MaxPages</small>
        }
    </div>
} 